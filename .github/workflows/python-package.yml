# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ "*" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      TOX_DB_NAME: letsmaintain
      TOX_DB_USER: postgres
      TOX_DB_PASSWD: ${{ secrets.PG_PASS }}
      DJANGO_SETTINGS_MODULE: test_setup.settings
      TOX_DB_ENGINE: django.db.backends.postgresql
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: ${{ secrets.PG_PASS }}
          POSTGRES_USER: postgres
          POSTGRES_DB:: letsmaintain
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        django-version: ["Django>=2.2,<2.3", "Django>=3.1,<3.2"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: psycopg2 prerequisites
      run: sudo apt-get install python-dev libpq-dev
      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install "${{ matrix.django-version }}"
        python -m pip install pytest-django pytest-cov pytest-factoryboy psycopg2-binary
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install last pass dependencies
      if: matrix.python-version == 3.9
      run: |
        python -m pip install black flake8 bandit
    
    - name: Lint with flake8
      if: matrix.python-version == 3.9
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        # Run black
        black . --check
        # Run bandit
        bandit letsmaintain/*
    
    - name: Test with pytest
      run: |
        echo $(ls)
        echo $(pwd)
        echo $(env)
        pytest -rs --nomigrations --cov --cov-branch
